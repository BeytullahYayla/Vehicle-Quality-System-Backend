version: '3.1'
services:
  authenticationandauthorization-service:
    build:
      context: ./authenticationandauthorization-service
      dockerfile: Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/CQVS
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Beytullah.123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  defect-service:
    build:
      context: ./defect-service
      dockerfile: Dockerfile
    ports:
      - 8082:8082
    depends_on:
      - database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/CQVS
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Beytullah.123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  usermanangement-service:
    build:
      context: ./usermanangement-service
      dockerfile: Dockerfile
    ports:
      - 8083:8083
    depends_on:
      - database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/CQVS
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Beytullah.123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  terminal-service:
    build:
      context: ./terminal-service
      dockerfile: Dockerfile
    ports:
      - 8084:8084
    depends_on:
      - database
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://database:5432/CQVS
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=Beytullah.123
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update

  database:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=Beytullah.123
      - POSTGRES_USER=postgres
      - POSTGRES_DB=CQVS
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - db_data:/var/lib/postgresql/data

volumes:
  db_data: